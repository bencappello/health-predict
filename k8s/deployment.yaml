apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-predict-api-deployment
  labels:
    app: health-predict-api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: health-predict-api
  template:
    metadata:
      labels:
        app: health-predict-api
    spec:
      serviceAccountName: default
      imagePullSecrets:
        - name: ecr-registry-key
      containers:
        - name: health-predict-api-container
          image: 536474293413.dkr.ecr.us-east-1.amazonaws.com/health-predict-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 45
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60 # Longer delay for liveness to give more startup time
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: MLFLOW_TRACKING_URI
              value: "http://10.0.1.99:5000"
            # Add other necessary environment variables like model name, stage if not hardcoded in API
            # - name: MODEL_NAME
            #   value: "HealthPredict_RandomForest"
            # - name: MODEL_STAGE
            #   value: "Production"
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: health-predict-api-service
spec:
  selector:
    app: health-predict-api
  ports:
    - protocol: TCP
      port: 80 # Service port within K8s cluster
      targetPort: 8000 # Port on the Pods
  type: NodePort # Exposes the service on each Node's IP at a static port 